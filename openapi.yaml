openapi: 3.1.0
info:
  title: RO-Crate API
  summary: A comprehensive API for managing RO-Crate collections
  description: |
    ## Introduction
    This API is documented in **OpenAPI format**.

    FIXME: Document something here

    ## Authentication

    FIXME: TBA

  contact:
    name: Issues
    url: https://github.com/johnf/ro-crate-api/issues
  x-logo:
    url: https://johnf.github.io/ro-crate-api/logo.webp
    altText: RO-Crate API logo
  license:
    name: MIT
    identifier: MIT
  version: 0.0.1
servers:
  - url: https://data.ldaca.edu.au/api
    description: LDaCA
  - url: https://catalog.paradisec.org.au/api/v1/oni
    description: PARADISEC
externalDocs:
  description: Find out more
  url: https://johnf.github.com/ro-crate-api
tags:
  - name: objects
    description: Collections and Objects
    x-displayName: Objects
  - name: object_model
    x-displayName: The Object Model
    description: |
      <SchemaDefinition schemaRef="#/components/schemas/Object" exampleRef="#/components/examples/Order" />
x-tagGroups:
  - name: General
    tags:
      - objects
  - name: Models
    tags:
      - object_model
paths:
  /objects:
    get:
      tags:
        - objects
      summary: List objects
      description: |
        ### Object
        Discover the objects in the collection and provides a summary
        Provides summary of each object
      operationId: listObjects
      parameters:
        - name: memberOf
          in: query
          description: Indicates when an object is a member of another object.
          example: https://catalog.paradisec.org.au/repository/NT1
          schema:
            type: string
        - name: conformsTo
          in: query
          description: Restrict the types of objects that are returned
          example: https://w3id.org/ldac/profile#Collection
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ConformsTo"
        - name: limit
          in: query
          description: Maximum number of objects to return.
          example: 100
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 1000
            default: 100
        - name: offset
          in: query
          description: Number of items to skip before returning the results.
          example: 100
          schema:
            type: integer
            format: int32
            minimum: 0
            default: 0
        - name: sort
          in: query
          description: Field to sort by
          example: id
          schema:
            type: string
            enum:
              - id
              - name
              - createdAt
              - updatedAt
            default: id
        - name: order
          in: query
          description: |
            Sort order:
            * `asc` - Ascending, from A to Z
            * `desc` - Descending, from Z to A
          example: asc
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Order"
            default: asc
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                description: A list of objects
                required:
                  - total
                  - objects
                properties:
                  total:
                    description: Total number of objects before pagination
                    type: int32
                    example: 42
                  objects:
                    type: array
                    items:
                      $ref: "#/components/schemas/Object"

  /object/meta:
    get:
      tags:
        - objects
      summary: Get RO-Crate for an object
      description: |
        ### Object Meta
        Get an RO-Crate Metadata Document with either IDs translated to api compatible or not
      operationId: getObjectMeta
      parameters:
        - name: id
          in: query
          description: RO-Crate ID
          example: https://catalog.paradisec.org.au/repository/LRB/001
          schema:
            type: string
            allOf:
              - $ref: "#/components/schemas/Id"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                description: RO-Crate JSON as defined at https://www.researchobject.org/ro-crate/specification
components:
  schemas:
    Id:
      type: string
      format: uri
      readOnly: true
    RecordType:
      type: string
      enum:
        - DataSet
        - RepositoryCollection
        - RepositoryObject
    Order:
      type: string
      enum:
        - asc
        - desc
    AccessControl:
      description: As defined at https://w3id.org/ldac/terms#authorizationWorkflow
      type: string
      enum:
        - Public
        - AgreeToTerms
        - AuthorizationByApplication
        - AuthorizationByInvitation
        - SelfAuthorization
        - AccessControlList
    CommunicationMode:
      description: As defined at https://w3id.org/ldac/terms#communicationMode
      type: string
      enum:
        - Gesture
        - SignedLanguage
        - Song
        - SpokenLanguage
        - WhistledLanguage
        - WrittenLanguage
    ConformsTo:
      type: string
      enum:
        - https://w3id.org/ldac/profile#Collection
        - https://w3id.org/ldac/profile#Object
    Object:
      type: object
      description: An object
      required:
        - id
        - name
        - description
        - conformsTo
        - recordType
      properties:
        id:
          description: RO-Crate ID
          example: https://catalog.paradisec.org.au/repository/LRB/001
          allOf:
            - $ref: "#/components/schemas/Id"
        name:
          description: Name of the object
          type: string
          example: Recordings of West Alor languages
          maxLength: 64
        description:
          description: Description of the object
          type: string
          example: A compilation of three sub-corpora of Australian English, made up of sociolinguistic interv...
          maxLength: 256
        conformsTo:
          description: Language Data Commons RO-Crate Profile
          example: https://w3id.org/ldac/profile#Collection
          allOf:
            - $ref: "#/components/schemas/ConformsTo"
        recordType:
          description: Language Data Commons RO-Crate Profile
          example:
            - DataSet
            - RepositoryCollection
          type: array
          items:
            $ref: "#/components/schemas/RecordType"
        parent:
          description: Parent of this object
          example: https://catalog.paradisec.org.au/repository/LRB
          allOf:
            - $ref: "#/components/schemas/Id"
        root:
          description: Root of the tree for this object
          example: https://catalog.paradisec.org.au/repository/LRB
          allOf:
            - $ref: "#/components/schemas/Id"
        createdAt:
          description: The date and time when the object was created
          type: string
          format: date-time
          example: 2023-01-01T12:00:00Z
        updatedAt:
          description: The date and time when the object was last updated
          type: string
          format: date-time
          example: 2023-01-02T12:00:00Z
        extra:
          type: object
          description: Extra information about the object. All fields are optional. We define some semi-standardised fields here. You can add anything extra here you like
          properties:
            collectionCount:
              type: integer
              description: The number of collections in the subtree of this object
            subCcollectionCount:
              type: integer
              description: The number of sub-collections in the subtree of this object
            fileCount:
              type: integer
              description: The number of files in the subtree of this object
            language:
              description: All the languages contained in the sub-tree of objects
              type: array
              items:
                type: string
              example:
                - English
                - Italian
            accessControl:
              description: The level of access control required to access this object
              example: Public
              allOf:
                - $ref: "#/components/schemas/AccessControl"
            communicationMode:
              description: The modes of communication in the tree
              example: Song
              type: array
              items:
                $ref: "#/components/schemas/CommunicationMode"
            mediaType:
              description: The mediatypes of files in the tree
              example:
                - text/html
                - text/csv
              type: array
              items:
                type: string

    # Error:
    #   type: object
    #   properties:
    #     code:
    #       type: integer
    #     message:
    #       type: string
  # responses:
    # 404NotFound: # Can be referenced as '#/components/responses/404NotFound'
    #   description: The specified resource was not found.
    # ImageResponse: # Can be referenced as '#/components/responses/ImageResponse'
    #   description: An image.
    #   content:
    #     image/*:
    #       schema:
    #         type: string
    #         format: binary
    # GenericError: # Can be referenced as '#/components/responses/GenericError'
    #   description: An error occurred.
    #   content:
    #     application/json:
    #       schema:
    #         $ref: "#/components/schemas/Error"

